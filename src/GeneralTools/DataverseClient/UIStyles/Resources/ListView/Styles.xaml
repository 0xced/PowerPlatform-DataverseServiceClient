<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	 xmlns:uistyles="clr-namespace:Microsoft.PowerPlatform.Dataverse.Ui.Styles.Resources">
	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.PowerPlatform.Dataverse.Ui.Styles;component/Resources/ScrollBar/Styles.xaml"/>
        <uistyles:ThemeResources NormalModeResourcesPath="/Microsoft.PowerPlatform.Dataverse.Ui.Styles;component/Resources/ListView/BrushResourcesNormalMode.xaml"
								 HCModeResourcesPath="/Microsoft.PowerPlatform.Dataverse.Ui.Styles;component/Resources/ListView/BrushResourcesHCMode.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<!-- Style for overall  ScrollViewer -->
	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
		 TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top"
							HorizontalScrollBarVisibility="Hidden"
							VerticalScrollBarVisibility="Hidden"
							Focusable="false">
								<GridViewHeaderRowPresenter Margin="2,0,2,0"
											Columns="{Binding Path=TemplatedParent.View.Columns,
				  RelativeSource={RelativeSource TemplatedParent}}"
											ColumnHeaderContainerStyle="{Binding
				  Path=TemplatedParent.View.ColumnHeaderContainerStyle,
				  RelativeSource={RelativeSource TemplatedParent}}"
											ColumnHeaderTemplate="{Binding
				  Path=TemplatedParent.View.ColumnHeaderTemplate,
				  RelativeSource={RelativeSource TemplatedParent}}"
											ColumnHeaderTemplateSelector="{Binding 
				  Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
				  RelativeSource={RelativeSource TemplatedParent}}"
											AllowsColumnReorder="{Binding
				  Path=TemplatedParent.View.AllowsColumnReorder,
				  RelativeSource={RelativeSource TemplatedParent}}"
											ColumnHeaderContextMenu="{Binding
				  Path=TemplatedParent.View.ColumnHeaderContextMenu,
				  RelativeSource={RelativeSource TemplatedParent}}"
											ColumnHeaderToolTip="{Binding
				  Path=TemplatedParent.View.ColumnHeaderToolTip,
				  RelativeSource={RelativeSource TemplatedParent}}"
											SnapsToDevicePixels="{TemplateBinding
				  SnapsToDevicePixels}" />
							</ScrollViewer>

							<ScrollContentPresenter Name="PART_ScrollContentPresenter"
									  KeyboardNavigation.DirectionalNavigation="Local"
									  CanContentScroll="True"
									  CanHorizontallyScroll="False"
									  CanVerticallyScroll="False" />
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar"
					   Orientation="Horizontal"
					   Grid.Row="1"
					   Maximum="{TemplateBinding ScrollableWidth}"
					   ViewportSize="{TemplateBinding ViewportWidth}"
					   Value="{TemplateBinding HorizontalOffset}"
					   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

						<ScrollBar Name="PART_VerticalScrollBar"
					   Grid.Column="1" Grid.RowSpan="2"
					   Maximum="{TemplateBinding ScrollableHeight}"
					   ViewportSize="{TemplateBinding ViewportHeight}"
					   Value="{TemplateBinding VerticalOffset}"
					   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderGripper"
		 TargetType="Thumb">
		<Setter Property="Width"
			Value="18" />
		<Setter Property="Background" Value="{DynamicResource ListViewColumnThumbBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
				  Background="Transparent">
						<Rectangle HorizontalAlignment="Center"
					   Width="1"
					   Fill="{TemplateBinding Background}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{DynamicResource ListViewColumnThumbBrush}"/>
	</Style>

	<Style x:Key="{x:Type GridViewColumnHeader}"
		 TargetType="GridViewColumnHeader">
		<Setter Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter Property="VerticalContentAlignment"
			Value="Center" />
		<Setter Property="Height" 
			   Value="32px"/>
		<Setter Property="Foreground"
			Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border x:Name="HeaderBorder"
					BorderThickness="0,0,1,1"
					Padding="2,0,2,0" BorderBrush="{DynamicResource ListViewColumnHeaderBorderBrush}" Background="{DynamicResource ListViewColumnHeaderBackgroundBrush}">
							<ContentPresenter x:Name="HeaderContent"
								TextElement.Foreground="{DynamicResource listViewItemOnOverForeGroundColor}" Margin="5"
								RecognizesAccessKey="True"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<Thumb x:Name="PART_HeaderGripper"
				   HorizontalAlignment="Right"
				   Margin="0,0,-9,0"
				   Style="{StaticResource GridViewColumnHeaderGripper}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HeaderBorder" 
						  Property="Background" Value="{DynamicResource ListViewItemOnOverTextBackgroundColor}"/>
							<Setter TargetName="HeaderContent" 
						 Property="TextElement.Foreground" 
						  Value="{DynamicResource listViewItemOnOverForeGroundColor}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="HeaderBorder" Value="{DynamicResource ListViewItemOnOverTextBackgroundColor}" Property="Background" />
							<Setter TargetName="HeaderContent" Value="{DynamicResource listViewItemOnOverForeGroundColor}" Property="TextElement.Foreground" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role"
			   Value="Floating">
				<Setter Property="Opacity"
				Value="0.7" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle Fill="#b1d6f0"
						   Width="{TemplateBinding ActualWidth}"
						   Height="{TemplateBinding ActualHeight}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role"
			   Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border Name="HeaderBorder"
					  BorderThickness="0,1,0,1" Background="{DynamicResource ListViewItemBackGroundBrush}" BorderBrush="{DynamicResource ListViewColumnHeaderBorderBrush}">
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="{x:Type ListView}"
		 TargetType="ListView">
		<Setter Property="SnapsToDevicePixels"
			Value="true" />
		<Setter Property="OverridesDefaultStyle"
			Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
			Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll"
			Value="true" />
		<Setter Property="VerticalContentAlignment"
			Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border"
				  BorderThickness="1" Background="{DynamicResource ListViewItemBackGroundBrush}" BorderBrush="{DynamicResource ListviewItemBorderBrush}">
						<ScrollViewer Style="{DynamicResource
						  {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping"
					 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
					  Value="false" />
						</Trigger>
						<Trigger Property="IsEnabled"
					 Value="false">
							<Setter TargetName="Border"
					  Property="Background" Value="{DynamicResource ListViewItemBackGroundBrush}"/>

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type ListViewItem}"
		 TargetType="ListViewItem">
		<Setter Property="SnapsToDevicePixels"
			Value="true" />
		<Setter Property="OverridesDefaultStyle"
			Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border x:Name="Border"
				  Padding="0"
				  SnapsToDevicePixels="true"
				  Background="Transparent">
						<Border Name="InnerBorder"  BorderThickness="0">
							<Grid TextElement.Foreground="{DynamicResource ListviewItemBorderForegroundBrush}" x:Name="ListViewItemGrid">
								<Grid.RowDefinitions>
									<RowDefinition Height="27" MaxHeight="27" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#b1d6f0" />
								<GridViewRowPresenter Grid.RowSpan="2" 
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5" />
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource ListViewItemDisabledBackGroundBrush}" Property="Background" />
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource listViewItemDisabledForeGroundBrush}" Property="TextElement.Foreground" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource ListViewItemOnOverTextBackgroundColor}" Property="Background" />
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource listViewItemOnOverForeGroundColor}" Property="TextElement.Foreground" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource ListViewItemOnOverTextBackgroundColor}" Property="Background" />
							<Setter TargetName="ListViewItemGrid" Value="{DynamicResource listViewItemOnOverForeGroundColor}" Property="TextElement.Foreground" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>